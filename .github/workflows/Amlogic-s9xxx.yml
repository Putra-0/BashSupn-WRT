#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Repack HelmiWrt OS for s905x devices using GitHub Actions
# Lisence: MIT
# Repacker : Raditya Budi Handoko <https://github.com/radityabh>
#=================================================

name: Build Amlogic s9xxx 21.02

on:
  workflow_dispatch:
#  schedule:
#    - cron: 59 23 * * *
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/Putra-0/amlogic-s9xxx-openwrt
  REPO_BRANCH: main
  PROC_LISTS: s905x3_s905x2_s905x_s905w_s905d_s922x_s912_s905
  KERNEL_VR: 5.4.0_5.15.51
  SOURCE_BRANCH: 21.02
  UPLOAD_RELEASE: true
  TZ: Asia/Jakarta

jobs:
  Build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H:%M")" >> $GITHUB_ENV
        export BUILD_DATE=$(curl -sL https://api.github.com/repos/Putra-0/BashSupn-WRT/releases | jq -r '.[0] | .tag_name' | sed 's/bashsupn-wrt-//g')
        echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
        git config --global credential.helper store

    - name: Cloning Source
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        sed -i '/BashSupnWRT_/c\ build_image_file="${out_path}/bashsupn-wrt-\${build_op}-k\${kernel}.img"' openwrt/makeHelmi
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Install Feeds
      id: feeds
      run: |
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV

    - name: Building BashSupnWrt
      id: build
      run: |
        cd $OPENWRTROOT
        [ -d openwrt-armvirt ] || mkdir -p openwrt-armvirt
        # Start Build s9xxx based on $SOURCE_BRANCH source.
        export BASH_FILENAME="immortalwrt-armvirt-64-default-rootfs.tar.gz"
        echo "BASH_FILENAME=$BASH_FILENAME" >> $GITHUB_ENV
        if wget -q --method=HEAD "$BASH_REL-$BUILD_DATE/$BASH_FILENAME"; then
          # Download Firmware $SOURCE_BRANCH
          echo "$BASH_FILENAME rootfs found under $BUILD_DATE tag! Start downloading..."
          wget -q -P openwrt-armvirt "$BASH_REL-$BUILD_DATE/$BASH_FILENAME"
          # Build Firmware $SOURCE_BRANCH
          sudo chmod +x makeHelmi
          sudo ./makeHelmi -d -b $PROC_LISTS -k $KERNEL_VR -a false
          export PACKAGED_OUTPUTPATH="${PWD}/out"
          echo "PACKAGED_OUTPUTPATH=$PACKAGED_OUTPUTPATH" >> $GITHUB_ENV
          find . -type f -name 'helmiwrt-s9*' | while read FILE ; do
            newfile=$(echo ${FILE} | sed "s/bashsupnwrt/bashsupnwrt-$SOURCE_BRANCH/") ;
            echo -e $(readlink -f ${FILE}) ;
            mv "${FILE}" "${newfile}" ;
            echo -e $(readlink -f ${FILE}) ;
          done
          echo "status=success" >> $GITHUB_OUTPUT
        fi

    - name: Upload Firmware Files to GitHub Release
      uses: ncipollo/release-action@v1.12.0
      if: steps.build.outputs.status == 'success' && !cancelled()
      with:
        allowUpdates: true
        replacesArtifacts: true
        name: BashsupnWRT OS ${{ env.BUILD_DATE }}
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: bashsupnwrt-${{ env.BUILD_DATE }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/bashsupnwrt-*
